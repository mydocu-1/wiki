{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"C:\\MYDOCU~1\\wiki","title":"C:\\MYDOCU~1\\wiki"},{"location":"#cmydocu1wiki","text":"","title":"C:\\MYDOCU~1\\wiki"},{"location":"arch/","text":"Arch Installation Bluetooth Misc Pacman Shell Sound Swap Tmux Wifi","title":"Arch"},{"location":"arch/#arch","text":"Installation Bluetooth Misc Pacman Shell Sound Swap Tmux Wifi","title":"Arch"},{"location":"arch/bluetooth/","text":"Bluetooth System # systemctl status bluetooth Connect devices # bluetoothctl > power on > default-agent > agent on > devices > connect <device> > > help","title":"Bluetooth"},{"location":"arch/bluetooth/#bluetooth","text":"","title":"Bluetooth"},{"location":"arch/bluetooth/#system","text":"# systemctl status bluetooth","title":"System"},{"location":"arch/bluetooth/#connect-devices","text":"# bluetoothctl > power on > default-agent > agent on > devices > connect <device> > > help","title":"Connect devices"},{"location":"arch/installation/","text":"Arch installation on thinkPad X1 Carbon 5th gen F1 to enter BIOS: disable secure boot F12 to select USB as boot device # lspci -k Setup wifi connection # ip link set interface up # wpa_supplicant -B -i interface -c <(wpa_passphrase MYSSID passphrase) # dhcpd interface # ping archlinux.org # timedatectl set-ntp true Partition hard drive # gdisk 260 MB for EF00 type of partition one partition for the rest Luks and LVM setup # cryptsetup --key-size 512 --hash sha512 -y --use-random luksFormat /dev/nvme0n1p2 # cryptsetup luksOpen /dev/nvme0n1p2 luks # pvcreate /dev/mapper/luks # vgcreate vg0 /dev/mapper/luks # lvcreate --size 16G vg0 --name swap # lvcreate -l +100%FREE vg0 --name root # mkfs.ext4 /dev/mapper/cryptroot # mount /dev/mapper/cryptroot /mnt # mkdir /mnt/boot # mkfs.fat -F32 /dev/nvme0n1p1 # mount /dev/nvme0n1p1 /mnt/boot # swapon /dev/mapper/vg0-swap System setup # pacstrap /mnt base base-devel zsh vim git sudo efibootmgr iw wpa_supplicant dialog # genfstab -pU /mnt >> /mnt/etc/fstab Edit /mnt/etc/fstab * On all non-boot partitions change to noatime (reduces wear if using an SSD) * Add the following line tomake /tmp a ramdisk: tmpfs /tmp tmpfs defaults,noatime,mode=1777 0 0 # arch-chroot /mnt /bin/bash # ln -s /usr/share/zoneinfo/America/Los_Angeles /etc/localtime # hwclock --systohc --utcecho LANG=en_US.UTF-8 >> /etc/locale.conf # echo LC_ALL= >> /etc/locale.conf # echo MYHOSTNAME > /etc/hostname Uncomment en-US.UTF-8 in /etc/locale.gen and generate locale # locale-gen # echo LANG=en_US.UTF-8 >> /etc/locale.conf # echo LC_ALL= >> /etc/locale.conf Add user # passwd # useradd -m -g users -G wheel,storage -s /bin/zsh MYUSERNAME # passwd MYUSERNAME Configure startup Configure mkinitcpio: * Add 'encrypt' and 'lvm2' to HOOKS before 'filesystems' * Add 'resume' after 'lvm2' (also has to be after 'udev') # mkinitcpio -p linux # bootctl --path=/boot install Append following lines to /boot/loader/loader.conf * default arch * timeout 5 Create /boot/loader/entries/arch.conf (use blkid to get UUID) title Arch Linux linux /vmlinuz-linux initrd /initramfs-linux.img options cryptdevice=UUID=<UUID>:vg0 root=/dev/mapper/vg0-root resume=/dev/mapper/vg0-swap rw acpi_backlight=video Complete setup and reboot # exit # umount -R /mnt # swapoff -a # reboot","title":"Arch installation on thinkPad X1 Carbon 5th gen"},{"location":"arch/installation/#arch-installation-on-thinkpad-x1-carbon-5th-gen","text":"F1 to enter BIOS: disable secure boot F12 to select USB as boot device # lspci -k","title":"Arch installation on thinkPad X1 Carbon 5th gen"},{"location":"arch/installation/#setup-wifi-connection","text":"# ip link set interface up # wpa_supplicant -B -i interface -c <(wpa_passphrase MYSSID passphrase) # dhcpd interface # ping archlinux.org # timedatectl set-ntp true","title":"Setup wifi connection"},{"location":"arch/installation/#partition-hard-drive","text":"# gdisk 260 MB for EF00 type of partition one partition for the rest","title":"Partition hard drive"},{"location":"arch/installation/#luks-and-lvm-setup","text":"# cryptsetup --key-size 512 --hash sha512 -y --use-random luksFormat /dev/nvme0n1p2 # cryptsetup luksOpen /dev/nvme0n1p2 luks # pvcreate /dev/mapper/luks # vgcreate vg0 /dev/mapper/luks # lvcreate --size 16G vg0 --name swap # lvcreate -l +100%FREE vg0 --name root # mkfs.ext4 /dev/mapper/cryptroot # mount /dev/mapper/cryptroot /mnt # mkdir /mnt/boot # mkfs.fat -F32 /dev/nvme0n1p1 # mount /dev/nvme0n1p1 /mnt/boot # swapon /dev/mapper/vg0-swap","title":"Luks and LVM setup"},{"location":"arch/installation/#system-setup","text":"# pacstrap /mnt base base-devel zsh vim git sudo efibootmgr iw wpa_supplicant dialog # genfstab -pU /mnt >> /mnt/etc/fstab Edit /mnt/etc/fstab * On all non-boot partitions change to noatime (reduces wear if using an SSD) * Add the following line tomake /tmp a ramdisk: tmpfs /tmp tmpfs defaults,noatime,mode=1777 0 0 # arch-chroot /mnt /bin/bash # ln -s /usr/share/zoneinfo/America/Los_Angeles /etc/localtime # hwclock --systohc --utcecho LANG=en_US.UTF-8 >> /etc/locale.conf # echo LC_ALL= >> /etc/locale.conf # echo MYHOSTNAME > /etc/hostname Uncomment en-US.UTF-8 in /etc/locale.gen and generate locale # locale-gen # echo LANG=en_US.UTF-8 >> /etc/locale.conf # echo LC_ALL= >> /etc/locale.conf","title":"System setup"},{"location":"arch/installation/#add-user","text":"# passwd # useradd -m -g users -G wheel,storage -s /bin/zsh MYUSERNAME # passwd MYUSERNAME","title":"Add user"},{"location":"arch/installation/#configure-startup","text":"Configure mkinitcpio: * Add 'encrypt' and 'lvm2' to HOOKS before 'filesystems' * Add 'resume' after 'lvm2' (also has to be after 'udev') # mkinitcpio -p linux # bootctl --path=/boot install Append following lines to /boot/loader/loader.conf * default arch * timeout 5 Create /boot/loader/entries/arch.conf (use blkid to get UUID) title Arch Linux linux /vmlinuz-linux initrd /initramfs-linux.img options cryptdevice=UUID=<UUID>:vg0 root=/dev/mapper/vg0-root resume=/dev/mapper/vg0-swap rw acpi_backlight=video","title":"Configure startup"},{"location":"arch/installation/#complete-setup-and-reboot","text":"# exit # umount -R /mnt # swapoff -a # reboot","title":"Complete setup and reboot"},{"location":"arch/misc/","text":"Misc Compare running and installed kernel versions # uname -a # pacman -Q linux","title":"Misc"},{"location":"arch/misc/#misc","text":"","title":"Misc"},{"location":"arch/misc/#compare-running-and-installed-kernel-versions","text":"# uname -a # pacman -Q linux","title":"Compare running and installed kernel versions"},{"location":"arch/pacman/","text":"Pacman -S <name> install package --asdeps install as dependency (good for trying things) -Rs <name> remove with deps -Syu upgrade -Ss <regex> search -Qs <regex> search in installed -Sg <name> see packages in the group -Si <name> display info -Ql <name> list files of the installed package -Qk <name> verify files presence -Qdt list orphan packages","title":"Pacman"},{"location":"arch/pacman/#pacman","text":"-S <name> install package --asdeps install as dependency (good for trying things) -Rs <name> remove with deps -Syu upgrade -Ss <regex> search -Qs <regex> search in installed -Sg <name> see packages in the group -Si <name> display info -Ql <name> list files of the installed package -Qk <name> verify files presence -Qdt list orphan packages","title":"Pacman"},{"location":"arch/shell/","text":"Shell zsh https://wiki.archlinux.org/index.php/zsh Change default user shell # chsh -s /bin/bash Fish https://wiki.archlinux.org/index.php/Fish https://fishshell.com/docs/current/tutorial.html Don't set it as user's default shell, instead set it as default shell for tmux in tmux.conf : # set-option -g default-shell \"/usr/bin/fish\"","title":"Shell"},{"location":"arch/shell/#shell","text":"","title":"Shell"},{"location":"arch/shell/#zsh","text":"https://wiki.archlinux.org/index.php/zsh Change default user shell # chsh -s /bin/bash","title":"zsh"},{"location":"arch/shell/#fish","text":"https://wiki.archlinux.org/index.php/Fish https://fishshell.com/docs/current/tutorial.html Don't set it as user's default shell, instead set it as default shell for tmux in tmux.conf : # set-option -g default-shell \"/usr/bin/fish\"","title":"Fish"},{"location":"arch/sound/","text":"Sound system Restart # pulseaudio -k && sudo alsa force-reload","title":"Sound system"},{"location":"arch/sound/#sound-system","text":"","title":"Sound system"},{"location":"arch/sound/#restart","text":"# pulseaudio -k && sudo alsa force-reload","title":"Restart"},{"location":"arch/swap/","text":"Swap file To create 1GB swap file: # fallocate -l 1G /swapfile1 # mkswap /swapfile1 # swapon /swapfile1 Add entry to /etc/fstab file: /swapfile1 swap swap defaults 0 0 Check if swap is activated or not # free -m","title":"Swap file"},{"location":"arch/swap/#swap-file","text":"To create 1GB swap file: # fallocate -l 1G /swapfile1 # mkswap /swapfile1 # swapon /swapfile1 Add entry to /etc/fstab file: /swapfile1 swap swap defaults 0 0","title":"Swap file"},{"location":"arch/swap/#check-if-swap-is-activated-or-not","text":"# free -m","title":"Check if swap is activated or not"},{"location":"arch/tmux/","text":"Tmux General <Mod>-? -- show key bindings <Mod>-: -- command prompt <Mod>-~ -- show messages ( Q to exit) <Mod>-I -- display info <Mod>-T -- clock mode ( Esc to exit) Panes <Mod>-G -- split current pane with a horizontal line <Mod>-V -- split current pane with a vertical line <Mod>-Q -- display pane numbers <Mod>-O -- switch to the next pane <Mod>-; -- switch to the last (previous) pane <Mod>-Z -- toggle current pane's 'full screen' mode <Mod>-! -- break pane to separate window <Mod>-X -- kill current pane (with prompt) Layout <Mod>-<Ctrl>-O -- rotate panes <Mod>-{ , <Mod>-} -- swap pane with the previous/next pane <Mod>-<Space> -- next panes layout <Mod>-<Alt>-1 -- <Mod>-<Alt>-5 -- select panes layout Size <Mod>-<Ctrl>-HJKL -- resize current pane Windows <Mod>-C -- open new Window <Mod>-J , <Mod>-K -- swap current window with the previous/next <Mod>-W -- choose window <Mod>-F -- find window <Mod>-P , <Mod>-N - switch to the previous/next window <Mod>-L -- switch to the last (previous) window <Mod>-& -- kill current window (with prompt) Sessions <Mod>-$ -- rename session <Mod>-S -- select session <Mod>-D -- detach current session","title":"Tmux"},{"location":"arch/tmux/#tmux","text":"","title":"Tmux"},{"location":"arch/tmux/#general","text":"<Mod>-? -- show key bindings <Mod>-: -- command prompt <Mod>-~ -- show messages ( Q to exit) <Mod>-I -- display info <Mod>-T -- clock mode ( Esc to exit)","title":"General"},{"location":"arch/tmux/#panes","text":"<Mod>-G -- split current pane with a horizontal line <Mod>-V -- split current pane with a vertical line <Mod>-Q -- display pane numbers <Mod>-O -- switch to the next pane <Mod>-; -- switch to the last (previous) pane <Mod>-Z -- toggle current pane's 'full screen' mode <Mod>-! -- break pane to separate window <Mod>-X -- kill current pane (with prompt)","title":"Panes"},{"location":"arch/tmux/#layout","text":"<Mod>-<Ctrl>-O -- rotate panes <Mod>-{ , <Mod>-} -- swap pane with the previous/next pane <Mod>-<Space> -- next panes layout <Mod>-<Alt>-1 -- <Mod>-<Alt>-5 -- select panes layout","title":"Layout"},{"location":"arch/tmux/#size","text":"<Mod>-<Ctrl>-HJKL -- resize current pane","title":"Size"},{"location":"arch/tmux/#windows","text":"<Mod>-C -- open new Window <Mod>-J , <Mod>-K -- swap current window with the previous/next <Mod>-W -- choose window <Mod>-F -- find window <Mod>-P , <Mod>-N - switch to the previous/next window <Mod>-L -- switch to the last (previous) window <Mod>-& -- kill current window (with prompt)","title":"Windows"},{"location":"arch/tmux/#sessions","text":"<Mod>-$ -- rename session <Mod>-S -- select session <Mod>-D -- detach current session","title":"Sessions"},{"location":"arch/wifi/","text":"Wifi Service # systemctl status wpa_supplicant@wlp4s0 Connect # wpa_supplicant -B -i wlp4s0 -c /etc/wpa_supplicant/example.conf Add connection # vim /etc/wpa_supplicant-wlp4s0.conf # wpa_passphrase MYSSID passphrase >> /etc/wpa_supplicant/example.conf","title":"Wifi"},{"location":"arch/wifi/#wifi","text":"","title":"Wifi"},{"location":"arch/wifi/#service","text":"# systemctl status wpa_supplicant@wlp4s0","title":"Service"},{"location":"arch/wifi/#connect","text":"# wpa_supplicant -B -i wlp4s0 -c /etc/wpa_supplicant/example.conf","title":"Connect"},{"location":"arch/wifi/#add-connection","text":"# vim /etc/wpa_supplicant-wlp4s0.conf # wpa_passphrase MYSSID passphrase >> /etc/wpa_supplicant/example.conf","title":"Add connection"},{"location":"vim/","text":"Vim General Motion Edit Search Registers Macros Buffers Help Tricks Comment multiple lines","title":"Vim"},{"location":"vim/#vim","text":"General Motion Edit Search Registers Macros Buffers Help Tricks Comment multiple lines","title":"Vim"},{"location":"vim/buffers/","text":"Buffers Buffer = File :enew - opens new (empty) buffer :e <filename> - opens existing file in buffer :ls - lists all buffers :b # - go to buffer by its number # :bn - next buffer :bp - previous buffer <C-^> - toggle between current and previous buffer :bd - delete (close) current buffer, remove it from buffer list :bun - unload (close) current buffer, keep it in buffer list Windows Window = Viewport :sp , :split - divide current window on top and bottom parts :vs , :vsplit - divide current window on left and right parts <C-w>-<hjkl> - navigate windows :q - closes current window; if its the only window, then exit vim","title":"Buffers"},{"location":"vim/buffers/#buffers","text":"Buffer = File :enew - opens new (empty) buffer :e <filename> - opens existing file in buffer :ls - lists all buffers :b # - go to buffer by its number # :bn - next buffer :bp - previous buffer <C-^> - toggle between current and previous buffer :bd - delete (close) current buffer, remove it from buffer list :bun - unload (close) current buffer, keep it in buffer list","title":"Buffers"},{"location":"vim/buffers/#windows","text":"Window = Viewport :sp , :split - divide current window on top and bottom parts :vs , :vsplit - divide current window on left and right parts <C-w>-<hjkl> - navigate windows :q - closes current window; if its the only window, then exit vim","title":"Windows"},{"location":"vim/edit/","text":"Edit Modes <Esc> - normal i I a A o O - insert mode i = before cursor, a = after cursor, I = ^i , A = $a o = line after, O = line before R - replace mode; r - replace a single character v V <C-v> - visual mode V = line-granular, <C-v> = vertical block mode Cursor commands d c y - delete, cut, yank; followed by motion ; works in visual mode dd cc yy - for the whole line D C Y 1 - till the end of line x X - delete char under/before cursor r a - replace char under cursor with a gu gU - to lower/upper case; followed by motion ; works in visual mode ~ - toggle case of char under cursor >> << - indent for the current line > < - indent for visual mode selection p P - paste after/before cursor gp gP - paste and put cursor before ]p - paste after cursor and fix indenting [p - paste before cursor and fix indenting J - join the next line . - repeat the last command u - undo the last change U - undo all changes to the line <C-r> - redo Text objects <command><i|a><text object> i - \u201cinside\u201d, does not include the text object surrounding a - \u201caround\u201d, includes the text object surrounding w - word; surrounding are trailing spaces s - sentence; surrounding are trailing spaces p - paragraph; surrounding are trailing lines \" ' ` - double-/single-/back-quoted string ( ) b - parentheses { } B - curly brackets [ ] < > - square/corner brackets t - markup language tag Reasonable override of the default behavior with nnoremap Y y$ . \u21a9","title":"Edit"},{"location":"vim/edit/#edit","text":"","title":"Edit"},{"location":"vim/edit/#modes","text":"<Esc> - normal i I a A o O - insert mode i = before cursor, a = after cursor, I = ^i , A = $a o = line after, O = line before R - replace mode; r - replace a single character v V <C-v> - visual mode V = line-granular, <C-v> = vertical block mode","title":"Modes"},{"location":"vim/edit/#cursor-commands","text":"d c y - delete, cut, yank; followed by motion ; works in visual mode dd cc yy - for the whole line D C Y 1 - till the end of line x X - delete char under/before cursor r a - replace char under cursor with a gu gU - to lower/upper case; followed by motion ; works in visual mode ~ - toggle case of char under cursor >> << - indent for the current line > < - indent for visual mode selection p P - paste after/before cursor gp gP - paste and put cursor before ]p - paste after cursor and fix indenting [p - paste before cursor and fix indenting J - join the next line . - repeat the last command u - undo the last change U - undo all changes to the line <C-r> - redo","title":"Cursor commands"},{"location":"vim/edit/#text-objects","text":"<command><i|a><text object> i - \u201cinside\u201d, does not include the text object surrounding a - \u201caround\u201d, includes the text object surrounding w - word; surrounding are trailing spaces s - sentence; surrounding are trailing spaces p - paragraph; surrounding are trailing lines \" ' ` - double-/single-/back-quoted string ( ) b - parentheses { } B - curly brackets [ ] < > - square/corner brackets t - markup language tag Reasonable override of the default behavior with nnoremap Y y$ . \u21a9","title":"Text objects"},{"location":"vim/help/","text":"Vim/Help Help :help - opens help :help <topic> - opens help on topic :helpgrep <word> , :help <word> <C-d> - searches for word in help <C-]> - follow link under cursor <C-o> - go back <C-i> - go forward","title":"Vim/Help"},{"location":"vim/help/#vimhelp","text":"","title":"Vim/Help"},{"location":"vim/help/#help","text":":help - opens help :help <topic> - opens help on topic :helpgrep <word> , :help <word> <C-d> - searches for word in help <C-]> - follow link under cursor <C-o> - go back <C-i> - go forward","title":"Help"},{"location":"vim/macros/","text":"Macros Record q a - record macro in register a q - stop recording Play @ a - play macro from register a @@ - repeat last executed macro :normal @ a - play macro from register a on visual selection View :reg a - view macro in register a Edit \" a p - paste the contents of the register a at cursor Edit \" a yy - yank edited macro into register a dd - delete line","title":"Macros"},{"location":"vim/macros/#macros","text":"","title":"Macros"},{"location":"vim/macros/#record","text":"q a - record macro in register a q - stop recording","title":"Record"},{"location":"vim/macros/#play","text":"@ a - play macro from register a @@ - repeat last executed macro :normal @ a - play macro from register a on visual selection","title":"Play"},{"location":"vim/macros/#view","text":":reg a - view macro in register a","title":"View"},{"location":"vim/macros/#edit","text":"\" a p - paste the contents of the register a at cursor Edit \" a yy - yank edited macro into register a dd - delete line","title":"Edit"},{"location":"vim/motion/","text":"Motion Moving cursor <C-g> - show location and file status h j k l - left, up, down, right 0 ^ $ - start / end of line gj gk g^ g$ - movements for wrapped lines w b - to next/prev beginning of the word W B - with respect to spaces e ge - to next/prev end of the word E gE - with respect to spaces ( ) - to prev/next sentence beginning { } - to prev/next paragraph beginning fa Fa - to next/prev a occurrence ta Ta - before next/prev a occurrence ; ' - repeat last f/t command in forward/backward direction % - to matching parentheses ( ) [ ] { } gg G - start / end of file 123G :123 - to line 123 H M L - to high/middle/low visible line zt zz zb - scroll line under cursor to be top/middle/bottom visible line <C-f> <C-b> - page forward/backward <C-d> <C-u> - half-page down/up `` '' - back/forth between prev/current locations / to the first non-blank char of the line <C-o> <C-i> - back/forth by location history :jumps - list locations history Marks ma - set mark a `a - go to mark a 'a - go to to the first non-blank char of the line with mark a [` ]` - to the prev/next lowercase mark :marks - list marks Special marks ' - position before the last jump . - last edit location [ ] - first/last char of previously yanked text < > - first/last character of the last selected visual mode text","title":"Motion"},{"location":"vim/motion/#motion","text":"","title":"Motion"},{"location":"vim/motion/#moving-cursor","text":"<C-g> - show location and file status h j k l - left, up, down, right 0 ^ $ - start / end of line gj gk g^ g$ - movements for wrapped lines w b - to next/prev beginning of the word W B - with respect to spaces e ge - to next/prev end of the word E gE - with respect to spaces ( ) - to prev/next sentence beginning { } - to prev/next paragraph beginning fa Fa - to next/prev a occurrence ta Ta - before next/prev a occurrence ; ' - repeat last f/t command in forward/backward direction % - to matching parentheses ( ) [ ] { } gg G - start / end of file 123G :123 - to line 123 H M L - to high/middle/low visible line zt zz zb - scroll line under cursor to be top/middle/bottom visible line <C-f> <C-b> - page forward/backward <C-d> <C-u> - half-page down/up `` '' - back/forth between prev/current locations / to the first non-blank char of the line <C-o> <C-i> - back/forth by location history :jumps - list locations history","title":"Moving cursor"},{"location":"vim/motion/#marks","text":"ma - set mark a `a - go to mark a 'a - go to to the first non-blank char of the line with mark a [` ]` - to the prev/next lowercase mark :marks - list marks","title":"Marks"},{"location":"vim/motion/#special-marks","text":"' - position before the last jump . - last edit location [ ] - first/last char of previously yanked text < > - first/last character of the last selected visual mode text","title":"Special marks"},{"location":"vim/registers/","text":"Registers q a - record macro into register a @ a - run macro from register a @@ - re-run most recent macro <register><copying command> , where copying commands are: d c y x etc \" a - store result in register a \" A - append result to register a \" a p - paste content of register a at cursor Registers: \"\" - unnamed default register \"* - system clipboard \"+ - system selection \"0 - last yanked text \"1 .. \"9 - last block deletions \"- - last char deletion \"_ - 'black hole' :reg - content of all registers <C-r> a - paste from register a in insert mode","title":"Registers"},{"location":"vim/registers/#registers","text":"q a - record macro into register a @ a - run macro from register a @@ - re-run most recent macro <register><copying command> , where copying commands are: d c y x etc \" a - store result in register a \" A - append result to register a \" a p - paste content of register a at cursor Registers: \"\" - unnamed default register \"* - system clipboard \"+ - system selection \"0 - last yanked text \"1 .. \"9 - last block deletions \"- - last char deletion \"_ - 'black hole' :reg - content of all registers <C-r> a - paste from register a in insert mode","title":"Registers"},{"location":"vim/search/","text":"Search /foo - search forward for foo ?foo - search backward for foo * # - search forward/backward for the word under cursor n N - next/prev occurrence :s/old/new/g - replace old with new in the line :%s/old/new/gc - replace old with new in the file with confirmation Search for the selected text y - yank selected text into the default register \" :/\\V<C-r>\" - / for search; \\V to enter a very nomagic mode; <C-r>\" for pasting yanked text from the register \"","title":"Search"},{"location":"vim/search/#search","text":"/foo - search forward for foo ?foo - search backward for foo * # - search forward/backward for the word under cursor n N - next/prev occurrence :s/old/new/g - replace old with new in the line :%s/old/new/gc - replace old with new in the file with confirmation","title":"Search"},{"location":"vim/search/#search-for-the-selected-text","text":"y - yank selected text into the default register \" :/\\V<C-r>\" - / for search; \\V to enter a very nomagic mode; <C-r>\" for pasting yanked text from the register \"","title":"Search for the selected text"},{"location":"vim/tricks/comment_multiple_lines/","text":"Comment multiple lines Ctrl-V - to enter block visual mode Select lines to edit Shift-I - to insert in visual mode Edit line ( # , // or whatever) Esc - to apply edit to all selected lines","title":"Comment multiple lines"},{"location":"vim/tricks/comment_multiple_lines/#comment-multiple-lines","text":"Ctrl-V - to enter block visual mode Select lines to edit Shift-I - to insert in visual mode Edit line ( # , // or whatever) Esc - to apply edit to all selected lines","title":"Comment multiple lines"}]}